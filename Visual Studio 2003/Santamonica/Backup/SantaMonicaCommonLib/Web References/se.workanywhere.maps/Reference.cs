//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2407.
// 
namespace SantaMonicaCommonLib.se.workanywhere.maps {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MapServerSoap", Namespace="http://maps.workanywhere.se/MapServer")]
    public class MapServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public MapServer() {
            this.Url = "http://maps.workanywhere.se/MapServer.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maps.workanywhere.se/MapServer/setUserSession", RequestNamespace="http://maps.workanywhere.se/MapServer", ResponseNamespace="http://maps.workanywhere.se/MapServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setUserSession(string accountNo, string password, string sessionId, string parameter1, string parameter2) {
            this.Invoke("setUserSession", new object[] {
                        accountNo,
                        password,
                        sessionId,
                        parameter1,
                        parameter2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetUserSession(string accountNo, string password, string sessionId, string parameter1, string parameter2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setUserSession", new object[] {
                        accountNo,
                        password,
                        sessionId,
                        parameter1,
                        parameter2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetUserSession(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maps.workanywhere.se/MapServer/getMapData", RequestNamespace="http://maps.workanywhere.se/MapServer", ResponseNamespace="http://maps.workanywhere.se/MapServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getMapData(string accountNo, string sessionId, string webServiceType) {
            this.Invoke("getMapData", new object[] {
                        accountNo,
                        sessionId,
                        webServiceType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMapData(string accountNo, string sessionId, string webServiceType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMapData", new object[] {
                        accountNo,
                        sessionId,
                        webServiceType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndgetMapData(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://maps.workanywhere.se/MapServer/getMap", RequestNamespace="http://maps.workanywhere.se/MapServer", ResponseNamespace="http://maps.workanywhere.se/MapServer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getMap(int x, int y, int level, int width, int height) {
            this.Invoke("getMap", new object[] {
                        x,
                        y,
                        level,
                        width,
                        height});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMap(int x, int y, int level, int width, int height, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMap", new object[] {
                        x,
                        y,
                        level,
                        width,
                        height}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndgetMap(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
}
