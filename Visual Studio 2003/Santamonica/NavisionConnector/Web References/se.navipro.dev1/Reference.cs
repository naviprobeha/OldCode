//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NavisionConnector.se.navipro.dev1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QuiksilverSoap", Namespace="http://tempuri.org/")]
    public partial class Quiksilver : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAvailableShipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getShipmentLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getShipmentLineIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setShipmentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrganizationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrganizationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateItemPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateItemPriceExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePurchasePriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateShippingCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUpdatedCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCustomerUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScaleEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setScaleEntryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFactoryOrderEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFactoryOrderEntryStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Quiksilver() {
            this.Url = "http://dev1.navipro.se/SantaMonica/Quiksilver.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAvailableShipmentsCompletedEventHandler getAvailableShipmentsCompleted;
        
        /// <remarks/>
        public event getShipmentLinesCompletedEventHandler getShipmentLinesCompleted;
        
        /// <remarks/>
        public event getShipmentLineIdsCompletedEventHandler getShipmentLineIdsCompleted;
        
        /// <remarks/>
        public event setShipmentStatusCompletedEventHandler setShipmentStatusCompleted;
        
        /// <remarks/>
        public event getOrganizationInfoCompletedEventHandler getOrganizationInfoCompleted;
        
        /// <remarks/>
        public event getOrganizationsCompletedEventHandler getOrganizationsCompleted;
        
        /// <remarks/>
        public event updateCustomerCompletedEventHandler updateCustomerCompleted;
        
        /// <remarks/>
        public event updateItemCompletedEventHandler updateItemCompleted;
        
        /// <remarks/>
        public event updateItemPriceCompletedEventHandler updateItemPriceCompleted;
        
        /// <remarks/>
        public event updateItemPriceExtendedCompletedEventHandler updateItemPriceExtendedCompleted;
        
        /// <remarks/>
        public event updatePurchasePriceCompletedEventHandler updatePurchasePriceCompleted;
        
        /// <remarks/>
        public event updateShippingCustomerCompletedEventHandler updateShippingCustomerCompleted;
        
        /// <remarks/>
        public event getUpdatedCustomersCompletedEventHandler getUpdatedCustomersCompleted;
        
        /// <remarks/>
        public event setCustomerUpdatedCompletedEventHandler setCustomerUpdatedCompleted;
        
        /// <remarks/>
        public event getScaleEntriesCompletedEventHandler getScaleEntriesCompleted;
        
        /// <remarks/>
        public event setScaleEntryStatusCompletedEventHandler setScaleEntryStatusCompleted;
        
        /// <remarks/>
        public event getFactoryOrderEntriesCompletedEventHandler getFactoryOrderEntriesCompleted;
        
        /// <remarks/>
        public event setFactoryOrderEntryStatusCompletedEventHandler setFactoryOrderEntryStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAvailableShipments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAvailableShipments() {
            object[] results = this.Invoke("getAvailableShipments", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAvailableShipments(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAvailableShipments", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetAvailableShipments(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAvailableShipmentsAsync() {
            this.getAvailableShipmentsAsync(null);
        }
        
        /// <remarks/>
        public void getAvailableShipmentsAsync(object userState) {
            if ((this.getAvailableShipmentsOperationCompleted == null)) {
                this.getAvailableShipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableShipmentsOperationCompleted);
            }
            this.InvokeAsync("getAvailableShipments", new object[0], this.getAvailableShipmentsOperationCompleted, userState);
        }
        
        private void OngetAvailableShipmentsOperationCompleted(object arg) {
            if ((this.getAvailableShipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAvailableShipmentsCompleted(this, new getAvailableShipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getShipmentLines", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getShipmentLines(string shipmentNo) {
            object[] results = this.Invoke("getShipmentLines", new object[] {
                        shipmentNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetShipmentLines(string shipmentNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getShipmentLines", new object[] {
                        shipmentNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetShipmentLines(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getShipmentLinesAsync(string shipmentNo) {
            this.getShipmentLinesAsync(shipmentNo, null);
        }
        
        /// <remarks/>
        public void getShipmentLinesAsync(string shipmentNo, object userState) {
            if ((this.getShipmentLinesOperationCompleted == null)) {
                this.getShipmentLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetShipmentLinesOperationCompleted);
            }
            this.InvokeAsync("getShipmentLines", new object[] {
                        shipmentNo}, this.getShipmentLinesOperationCompleted, userState);
        }
        
        private void OngetShipmentLinesOperationCompleted(object arg) {
            if ((this.getShipmentLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getShipmentLinesCompleted(this, new getShipmentLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getShipmentLineIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getShipmentLineIds(string shipmentNo, int shipmentLineNo) {
            object[] results = this.Invoke("getShipmentLineIds", new object[] {
                        shipmentNo,
                        shipmentLineNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetShipmentLineIds(string shipmentNo, int shipmentLineNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getShipmentLineIds", new object[] {
                        shipmentNo,
                        shipmentLineNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetShipmentLineIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getShipmentLineIdsAsync(string shipmentNo, int shipmentLineNo) {
            this.getShipmentLineIdsAsync(shipmentNo, shipmentLineNo, null);
        }
        
        /// <remarks/>
        public void getShipmentLineIdsAsync(string shipmentNo, int shipmentLineNo, object userState) {
            if ((this.getShipmentLineIdsOperationCompleted == null)) {
                this.getShipmentLineIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetShipmentLineIdsOperationCompleted);
            }
            this.InvokeAsync("getShipmentLineIds", new object[] {
                        shipmentNo,
                        shipmentLineNo}, this.getShipmentLineIdsOperationCompleted, userState);
        }
        
        private void OngetShipmentLineIdsOperationCompleted(object arg) {
            if ((this.getShipmentLineIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getShipmentLineIdsCompleted(this, new getShipmentLineIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setShipmentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setShipmentStatus(string shipmentNo, int status) {
            this.Invoke("setShipmentStatus", new object[] {
                        shipmentNo,
                        status});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetShipmentStatus(string shipmentNo, int status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setShipmentStatus", new object[] {
                        shipmentNo,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetShipmentStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setShipmentStatusAsync(string shipmentNo, int status) {
            this.setShipmentStatusAsync(shipmentNo, status, null);
        }
        
        /// <remarks/>
        public void setShipmentStatusAsync(string shipmentNo, int status, object userState) {
            if ((this.setShipmentStatusOperationCompleted == null)) {
                this.setShipmentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetShipmentStatusOperationCompleted);
            }
            this.InvokeAsync("setShipmentStatus", new object[] {
                        shipmentNo,
                        status}, this.setShipmentStatusOperationCompleted, userState);
        }
        
        private void OnsetShipmentStatusOperationCompleted(object arg) {
            if ((this.setShipmentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setShipmentStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOrganizationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getOrganizationInfo(string organizationNo, ref string userName, ref string passWord) {
            object[] results = this.Invoke("getOrganizationInfo", new object[] {
                        organizationNo,
                        userName,
                        passWord});
            userName = ((string)(results[0]));
            passWord = ((string)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetOrganizationInfo(string organizationNo, string userName, string passWord, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getOrganizationInfo", new object[] {
                        organizationNo,
                        userName,
                        passWord}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndgetOrganizationInfo(System.IAsyncResult asyncResult, out string userName, out string passWord) {
            object[] results = this.EndInvoke(asyncResult);
            userName = ((string)(results[0]));
            passWord = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void getOrganizationInfoAsync(string organizationNo, string userName, string passWord) {
            this.getOrganizationInfoAsync(organizationNo, userName, passWord, null);
        }
        
        /// <remarks/>
        public void getOrganizationInfoAsync(string organizationNo, string userName, string passWord, object userState) {
            if ((this.getOrganizationInfoOperationCompleted == null)) {
                this.getOrganizationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrganizationInfoOperationCompleted);
            }
            this.InvokeAsync("getOrganizationInfo", new object[] {
                        organizationNo,
                        userName,
                        passWord}, this.getOrganizationInfoOperationCompleted, userState);
        }
        
        private void OngetOrganizationInfoOperationCompleted(object arg) {
            if ((this.getOrganizationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrganizationInfoCompleted(this, new getOrganizationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOrganizations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getOrganizations(string syncGroupCode) {
            object[] results = this.Invoke("getOrganizations", new object[] {
                        syncGroupCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetOrganizations(string syncGroupCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getOrganizations", new object[] {
                        syncGroupCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetOrganizations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getOrganizationsAsync(string syncGroupCode) {
            this.getOrganizationsAsync(syncGroupCode, null);
        }
        
        /// <remarks/>
        public void getOrganizationsAsync(string syncGroupCode, object userState) {
            if ((this.getOrganizationsOperationCompleted == null)) {
                this.getOrganizationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrganizationsOperationCompleted);
            }
            this.InvokeAsync("getOrganizations", new object[] {
                        syncGroupCode}, this.getOrganizationsOperationCompleted, userState);
        }
        
        private void OngetOrganizationsOperationCompleted(object arg) {
            if ((this.getOrganizationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrganizationsCompleted(this, new getOrganizationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateCustomer(string xmlRecord, string organizationNo) {
            this.Invoke("updateCustomer", new object[] {
                        xmlRecord,
                        organizationNo});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateCustomer(string xmlRecord, string organizationNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateCustomer", new object[] {
                        xmlRecord,
                        organizationNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateCustomer(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateCustomerAsync(string xmlRecord, string organizationNo) {
            this.updateCustomerAsync(xmlRecord, organizationNo, null);
        }
        
        /// <remarks/>
        public void updateCustomerAsync(string xmlRecord, string organizationNo, object userState) {
            if ((this.updateCustomerOperationCompleted == null)) {
                this.updateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerOperationCompleted);
            }
            this.InvokeAsync("updateCustomer", new object[] {
                        xmlRecord,
                        organizationNo}, this.updateCustomerOperationCompleted, userState);
        }
        
        private void OnupdateCustomerOperationCompleted(object arg) {
            if ((this.updateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateItem(string xmlRecord) {
            this.Invoke("updateItem", new object[] {
                        xmlRecord});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateItem(string xmlRecord, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateItem", new object[] {
                        xmlRecord}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateItem(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateItemAsync(string xmlRecord) {
            this.updateItemAsync(xmlRecord, null);
        }
        
        /// <remarks/>
        public void updateItemAsync(string xmlRecord, object userState) {
            if ((this.updateItemOperationCompleted == null)) {
                this.updateItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateItemOperationCompleted);
            }
            this.InvokeAsync("updateItem", new object[] {
                        xmlRecord}, this.updateItemOperationCompleted, userState);
        }
        
        private void OnupdateItemOperationCompleted(object arg) {
            if ((this.updateItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateItemPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateItemPrice(string xmlRecord) {
            this.Invoke("updateItemPrice", new object[] {
                        xmlRecord});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateItemPrice(string xmlRecord, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateItemPrice", new object[] {
                        xmlRecord}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateItemPrice(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateItemPriceAsync(string xmlRecord) {
            this.updateItemPriceAsync(xmlRecord, null);
        }
        
        /// <remarks/>
        public void updateItemPriceAsync(string xmlRecord, object userState) {
            if ((this.updateItemPriceOperationCompleted == null)) {
                this.updateItemPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateItemPriceOperationCompleted);
            }
            this.InvokeAsync("updateItemPrice", new object[] {
                        xmlRecord}, this.updateItemPriceOperationCompleted, userState);
        }
        
        private void OnupdateItemPriceOperationCompleted(object arg) {
            if ((this.updateItemPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateItemPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateItemPriceExtended", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateItemPriceExtended(string xmlRecord) {
            this.Invoke("updateItemPriceExtended", new object[] {
                        xmlRecord});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateItemPriceExtended(string xmlRecord, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateItemPriceExtended", new object[] {
                        xmlRecord}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateItemPriceExtended(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateItemPriceExtendedAsync(string xmlRecord) {
            this.updateItemPriceExtendedAsync(xmlRecord, null);
        }
        
        /// <remarks/>
        public void updateItemPriceExtendedAsync(string xmlRecord, object userState) {
            if ((this.updateItemPriceExtendedOperationCompleted == null)) {
                this.updateItemPriceExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateItemPriceExtendedOperationCompleted);
            }
            this.InvokeAsync("updateItemPriceExtended", new object[] {
                        xmlRecord}, this.updateItemPriceExtendedOperationCompleted, userState);
        }
        
        private void OnupdateItemPriceExtendedOperationCompleted(object arg) {
            if ((this.updateItemPriceExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateItemPriceExtendedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePurchasePrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updatePurchasePrice(string xmlRecord) {
            this.Invoke("updatePurchasePrice", new object[] {
                        xmlRecord});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdatePurchasePrice(string xmlRecord, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updatePurchasePrice", new object[] {
                        xmlRecord}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdatePurchasePrice(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updatePurchasePriceAsync(string xmlRecord) {
            this.updatePurchasePriceAsync(xmlRecord, null);
        }
        
        /// <remarks/>
        public void updatePurchasePriceAsync(string xmlRecord, object userState) {
            if ((this.updatePurchasePriceOperationCompleted == null)) {
                this.updatePurchasePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePurchasePriceOperationCompleted);
            }
            this.InvokeAsync("updatePurchasePrice", new object[] {
                        xmlRecord}, this.updatePurchasePriceOperationCompleted, userState);
        }
        
        private void OnupdatePurchasePriceOperationCompleted(object arg) {
            if ((this.updatePurchasePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePurchasePriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateShippingCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateShippingCustomer(string xmlRecord) {
            this.Invoke("updateShippingCustomer", new object[] {
                        xmlRecord});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateShippingCustomer(string xmlRecord, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateShippingCustomer", new object[] {
                        xmlRecord}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateShippingCustomer(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateShippingCustomerAsync(string xmlRecord) {
            this.updateShippingCustomerAsync(xmlRecord, null);
        }
        
        /// <remarks/>
        public void updateShippingCustomerAsync(string xmlRecord, object userState) {
            if ((this.updateShippingCustomerOperationCompleted == null)) {
                this.updateShippingCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateShippingCustomerOperationCompleted);
            }
            this.InvokeAsync("updateShippingCustomer", new object[] {
                        xmlRecord}, this.updateShippingCustomerOperationCompleted, userState);
        }
        
        private void OnupdateShippingCustomerOperationCompleted(object arg) {
            if ((this.updateShippingCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateShippingCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUpdatedCustomers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getUpdatedCustomers() {
            object[] results = this.Invoke("getUpdatedCustomers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUpdatedCustomers(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUpdatedCustomers", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetUpdatedCustomers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getUpdatedCustomersAsync() {
            this.getUpdatedCustomersAsync(null);
        }
        
        /// <remarks/>
        public void getUpdatedCustomersAsync(object userState) {
            if ((this.getUpdatedCustomersOperationCompleted == null)) {
                this.getUpdatedCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUpdatedCustomersOperationCompleted);
            }
            this.InvokeAsync("getUpdatedCustomers", new object[0], this.getUpdatedCustomersOperationCompleted, userState);
        }
        
        private void OngetUpdatedCustomersOperationCompleted(object arg) {
            if ((this.getUpdatedCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUpdatedCustomersCompleted(this, new getUpdatedCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setCustomerUpdated", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setCustomerUpdated(string organizationNo, string customerNo, bool updated) {
            this.Invoke("setCustomerUpdated", new object[] {
                        organizationNo,
                        customerNo,
                        updated});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetCustomerUpdated(string organizationNo, string customerNo, bool updated, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setCustomerUpdated", new object[] {
                        organizationNo,
                        customerNo,
                        updated}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetCustomerUpdated(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setCustomerUpdatedAsync(string organizationNo, string customerNo, bool updated) {
            this.setCustomerUpdatedAsync(organizationNo, customerNo, updated, null);
        }
        
        /// <remarks/>
        public void setCustomerUpdatedAsync(string organizationNo, string customerNo, bool updated, object userState) {
            if ((this.setCustomerUpdatedOperationCompleted == null)) {
                this.setCustomerUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCustomerUpdatedOperationCompleted);
            }
            this.InvokeAsync("setCustomerUpdated", new object[] {
                        organizationNo,
                        customerNo,
                        updated}, this.setCustomerUpdatedOperationCompleted, userState);
        }
        
        private void OnsetCustomerUpdatedOperationCompleted(object arg) {
            if ((this.setCustomerUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCustomerUpdatedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getScaleEntries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getScaleEntries() {
            object[] results = this.Invoke("getScaleEntries", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetScaleEntries(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getScaleEntries", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetScaleEntries(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getScaleEntriesAsync() {
            this.getScaleEntriesAsync(null);
        }
        
        /// <remarks/>
        public void getScaleEntriesAsync(object userState) {
            if ((this.getScaleEntriesOperationCompleted == null)) {
                this.getScaleEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScaleEntriesOperationCompleted);
            }
            this.InvokeAsync("getScaleEntries", new object[0], this.getScaleEntriesOperationCompleted, userState);
        }
        
        private void OngetScaleEntriesOperationCompleted(object arg) {
            if ((this.getScaleEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScaleEntriesCompleted(this, new getScaleEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setScaleEntryStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setScaleEntryStatus(string factoryCode, int entryNo, int status) {
            this.Invoke("setScaleEntryStatus", new object[] {
                        factoryCode,
                        entryNo,
                        status});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetScaleEntryStatus(string factoryCode, int entryNo, int status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setScaleEntryStatus", new object[] {
                        factoryCode,
                        entryNo,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetScaleEntryStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setScaleEntryStatusAsync(string factoryCode, int entryNo, int status) {
            this.setScaleEntryStatusAsync(factoryCode, entryNo, status, null);
        }
        
        /// <remarks/>
        public void setScaleEntryStatusAsync(string factoryCode, int entryNo, int status, object userState) {
            if ((this.setScaleEntryStatusOperationCompleted == null)) {
                this.setScaleEntryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetScaleEntryStatusOperationCompleted);
            }
            this.InvokeAsync("setScaleEntryStatus", new object[] {
                        factoryCode,
                        entryNo,
                        status}, this.setScaleEntryStatusOperationCompleted, userState);
        }
        
        private void OnsetScaleEntryStatusOperationCompleted(object arg) {
            if ((this.setScaleEntryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setScaleEntryStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFactoryOrderEntries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFactoryOrderEntries() {
            object[] results = this.Invoke("getFactoryOrderEntries", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFactoryOrderEntries(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFactoryOrderEntries", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndgetFactoryOrderEntries(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFactoryOrderEntriesAsync() {
            this.getFactoryOrderEntriesAsync(null);
        }
        
        /// <remarks/>
        public void getFactoryOrderEntriesAsync(object userState) {
            if ((this.getFactoryOrderEntriesOperationCompleted == null)) {
                this.getFactoryOrderEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFactoryOrderEntriesOperationCompleted);
            }
            this.InvokeAsync("getFactoryOrderEntries", new object[0], this.getFactoryOrderEntriesOperationCompleted, userState);
        }
        
        private void OngetFactoryOrderEntriesOperationCompleted(object arg) {
            if ((this.getFactoryOrderEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFactoryOrderEntriesCompleted(this, new getFactoryOrderEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setFactoryOrderEntryStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setFactoryOrderEntryStatus(int entryNo, int status) {
            this.Invoke("setFactoryOrderEntryStatus", new object[] {
                        entryNo,
                        status});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetFactoryOrderEntryStatus(int entryNo, int status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setFactoryOrderEntryStatus", new object[] {
                        entryNo,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetFactoryOrderEntryStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setFactoryOrderEntryStatusAsync(int entryNo, int status) {
            this.setFactoryOrderEntryStatusAsync(entryNo, status, null);
        }
        
        /// <remarks/>
        public void setFactoryOrderEntryStatusAsync(int entryNo, int status, object userState) {
            if ((this.setFactoryOrderEntryStatusOperationCompleted == null)) {
                this.setFactoryOrderEntryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFactoryOrderEntryStatusOperationCompleted);
            }
            this.InvokeAsync("setFactoryOrderEntryStatus", new object[] {
                        entryNo,
                        status}, this.setFactoryOrderEntryStatusOperationCompleted, userState);
        }
        
        private void OnsetFactoryOrderEntryStatusOperationCompleted(object arg) {
            if ((this.setFactoryOrderEntryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFactoryOrderEntryStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAvailableShipmentsCompletedEventHandler(object sender, getAvailableShipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAvailableShipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAvailableShipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getShipmentLinesCompletedEventHandler(object sender, getShipmentLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getShipmentLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getShipmentLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getShipmentLineIdsCompletedEventHandler(object sender, getShipmentLineIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getShipmentLineIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getShipmentLineIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setShipmentStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getOrganizationInfoCompletedEventHandler(object sender, getOrganizationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrganizationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrganizationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string userName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string passWord {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getOrganizationsCompletedEventHandler(object sender, getOrganizationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrganizationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrganizationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateItemPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateItemPriceExtendedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updatePurchasePriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateShippingCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getUpdatedCustomersCompletedEventHandler(object sender, getUpdatedCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUpdatedCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUpdatedCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setCustomerUpdatedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getScaleEntriesCompletedEventHandler(object sender, getScaleEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScaleEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScaleEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setScaleEntryStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getFactoryOrderEntriesCompletedEventHandler(object sender, getFactoryOrderEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFactoryOrderEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFactoryOrderEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setFactoryOrderEntryStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591