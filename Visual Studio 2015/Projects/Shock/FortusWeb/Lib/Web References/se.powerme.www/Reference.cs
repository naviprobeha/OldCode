//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4963
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4963.
// 
#pragma warning disable 1591

namespace Lib.se.powerme.www {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="bpo_api_1_0Soap", Namespace="http://fortusinternational.com/")]
    public partial class bpo_api_1_0 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogInCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByPersonalNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListNonIntegratedOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderIntegrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrackingNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderIntegrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderstatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSubscriptionFromProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSubscriptionInfoByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnSubscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListFreighTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListPaymentTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUpdateArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUpdateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListArticlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListArticlesFromProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceProductInTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRetailPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetArticlePropertyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public bpo_api_1_0() {
            this.Url = global::Lib.Properties.Settings.Default.Lib_se_powerme_www_bpo_api_1_0;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event CreateUpdateCustomerCompletedEventHandler CreateUpdateCustomerCompleted;
        
        /// <remarks/>
        public event ListCustomersCompletedEventHandler ListCustomersCompleted;
        
        /// <remarks/>
        public event LogInCustomerCompletedEventHandler LogInCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerCompletedEventHandler GetCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerByPersonalNumberCompletedEventHandler GetCustomerByPersonalNumberCompleted;
        
        /// <remarks/>
        public event GetCustomerByEmailCompletedEventHandler GetCustomerByEmailCompleted;
        
        /// <remarks/>
        public event CreateOrderCompletedEventHandler CreateOrderCompleted;
        
        /// <remarks/>
        public event ListOrdersCompletedEventHandler ListOrdersCompleted;
        
        /// <remarks/>
        public event ListNonIntegratedOrdersCompletedEventHandler ListNonIntegratedOrdersCompleted;
        
        /// <remarks/>
        public event GetOrderIntegrationCompletedEventHandler GetOrderIntegrationCompleted;
        
        /// <remarks/>
        public event AddTrackingNumberCompletedEventHandler AddTrackingNumberCompleted;
        
        /// <remarks/>
        public event SetOrderIntegrationCompletedEventHandler SetOrderIntegrationCompleted;
        
        /// <remarks/>
        public event UpdateOrderstatusCompletedEventHandler UpdateOrderstatusCompleted;
        
        /// <remarks/>
        public event CreateSubscriptionCompletedEventHandler CreateSubscriptionCompleted;
        
        /// <remarks/>
        public event CreateSubscriptionFromProfileCompletedEventHandler CreateSubscriptionFromProfileCompleted;
        
        /// <remarks/>
        public event ListSubscriptionInfoByCustomerCompletedEventHandler ListSubscriptionInfoByCustomerCompleted;
        
        /// <remarks/>
        public event UnSubscribeCompletedEventHandler UnSubscribeCompleted;
        
        /// <remarks/>
        public event ListFreighTypesCompletedEventHandler ListFreighTypesCompleted;
        
        /// <remarks/>
        public event ListPaymentTypesCompletedEventHandler ListPaymentTypesCompleted;
        
        /// <remarks/>
        public event CreateUpdateArticleCompletedEventHandler CreateUpdateArticleCompleted;
        
        /// <remarks/>
        public event CreateUpdateProductCompletedEventHandler CreateUpdateProductCompleted;
        
        /// <remarks/>
        public event ListProductsCompletedEventHandler ListProductsCompleted;
        
        /// <remarks/>
        public event ListArticlesCompletedEventHandler ListArticlesCompleted;
        
        /// <remarks/>
        public event ListArticlesFromProductCompletedEventHandler ListArticlesFromProductCompleted;
        
        /// <remarks/>
        public event GetProductCompletedEventHandler GetProductCompleted;
        
        /// <remarks/>
        public event PlaceProductInTreeCompletedEventHandler PlaceProductInTreeCompleted;
        
        /// <remarks/>
        public event GetArticleCompletedEventHandler GetArticleCompleted;
        
        /// <remarks/>
        public event SetInventoryCompletedEventHandler SetInventoryCompleted;
        
        /// <remarks/>
        public event UpdatePriceCompletedEventHandler UpdatePriceCompleted;
        
        /// <remarks/>
        public event UpdateRetailPriceCompletedEventHandler UpdateRetailPriceCompleted;
        
        /// <remarks/>
        public event UpdateGroupPriceCompletedEventHandler UpdateGroupPriceCompleted;
        
        /// <remarks/>
        public event SetArticlePropertyCompletedEventHandler SetArticlePropertyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/HelloWorld", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/TestConnection", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestConnection(string ApiKey) {
            object[] results = this.Invoke("TestConnection", new object[] {
                        ApiKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionAsync(string ApiKey) {
            this.TestConnectionAsync(ApiKey, null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(string ApiKey, object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[] {
                        ApiKey}, this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new TestConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/CreateUpdateCustomer", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateUpdateCustomer(string ApiKey, CountryCode country, Customer customerdata, string password) {
            object[] results = this.Invoke("CreateUpdateCustomer", new object[] {
                        ApiKey,
                        country,
                        customerdata,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUpdateCustomerAsync(string ApiKey, CountryCode country, Customer customerdata, string password) {
            this.CreateUpdateCustomerAsync(ApiKey, country, customerdata, password, null);
        }
        
        /// <remarks/>
        public void CreateUpdateCustomerAsync(string ApiKey, CountryCode country, Customer customerdata, string password, object userState) {
            if ((this.CreateUpdateCustomerOperationCompleted == null)) {
                this.CreateUpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateUpdateCustomer", new object[] {
                        ApiKey,
                        country,
                        customerdata,
                        password}, this.CreateUpdateCustomerOperationCompleted, userState);
        }
        
        private void OnCreateUpdateCustomerOperationCompleted(object arg) {
            if ((this.CreateUpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUpdateCustomerCompleted(this, new CreateUpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListCustomers", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer[] ListCustomers(string ApiKey) {
            object[] results = this.Invoke("ListCustomers", new object[] {
                        ApiKey});
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public void ListCustomersAsync(string ApiKey) {
            this.ListCustomersAsync(ApiKey, null);
        }
        
        /// <remarks/>
        public void ListCustomersAsync(string ApiKey, object userState) {
            if ((this.ListCustomersOperationCompleted == null)) {
                this.ListCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCustomersOperationCompleted);
            }
            this.InvokeAsync("ListCustomers", new object[] {
                        ApiKey}, this.ListCustomersOperationCompleted, userState);
        }
        
        private void OnListCustomersOperationCompleted(object arg) {
            if ((this.ListCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCustomersCompleted(this, new ListCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/LogInCustomer", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LogInCustomer(string ApiKey, CountryCode country, string email, string password) {
            object[] results = this.Invoke("LogInCustomer", new object[] {
                        ApiKey,
                        country,
                        email,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LogInCustomerAsync(string ApiKey, CountryCode country, string email, string password) {
            this.LogInCustomerAsync(ApiKey, country, email, password, null);
        }
        
        /// <remarks/>
        public void LogInCustomerAsync(string ApiKey, CountryCode country, string email, string password, object userState) {
            if ((this.LogInCustomerOperationCompleted == null)) {
                this.LogInCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogInCustomerOperationCompleted);
            }
            this.InvokeAsync("LogInCustomer", new object[] {
                        ApiKey,
                        country,
                        email,
                        password}, this.LogInCustomerOperationCompleted, userState);
        }
        
        private void OnLogInCustomerOperationCompleted(object arg) {
            if ((this.LogInCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogInCustomerCompleted(this, new LogInCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/GetCustomer", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer GetCustomer(string ApiKey, int customerid) {
            object[] results = this.Invoke("GetCustomer", new object[] {
                        ApiKey,
                        customerid});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAsync(string ApiKey, int customerid) {
            this.GetCustomerAsync(ApiKey, customerid, null);
        }
        
        /// <remarks/>
        public void GetCustomerAsync(string ApiKey, int customerid, object userState) {
            if ((this.GetCustomerOperationCompleted == null)) {
                this.GetCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerOperationCompleted);
            }
            this.InvokeAsync("GetCustomer", new object[] {
                        ApiKey,
                        customerid}, this.GetCustomerOperationCompleted, userState);
        }
        
        private void OnGetCustomerOperationCompleted(object arg) {
            if ((this.GetCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerCompleted(this, new GetCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/GetCustomerByPersonalNumber", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer GetCustomerByPersonalNumber(string ApiKey, CountryCode country, string personalnumber) {
            object[] results = this.Invoke("GetCustomerByPersonalNumber", new object[] {
                        ApiKey,
                        country,
                        personalnumber});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByPersonalNumberAsync(string ApiKey, CountryCode country, string personalnumber) {
            this.GetCustomerByPersonalNumberAsync(ApiKey, country, personalnumber, null);
        }
        
        /// <remarks/>
        public void GetCustomerByPersonalNumberAsync(string ApiKey, CountryCode country, string personalnumber, object userState) {
            if ((this.GetCustomerByPersonalNumberOperationCompleted == null)) {
                this.GetCustomerByPersonalNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByPersonalNumberOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByPersonalNumber", new object[] {
                        ApiKey,
                        country,
                        personalnumber}, this.GetCustomerByPersonalNumberOperationCompleted, userState);
        }
        
        private void OnGetCustomerByPersonalNumberOperationCompleted(object arg) {
            if ((this.GetCustomerByPersonalNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByPersonalNumberCompleted(this, new GetCustomerByPersonalNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/GetCustomerByEmail", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer GetCustomerByEmail(string ApiKey, CountryCode country, string email) {
            object[] results = this.Invoke("GetCustomerByEmail", new object[] {
                        ApiKey,
                        country,
                        email});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByEmailAsync(string ApiKey, CountryCode country, string email) {
            this.GetCustomerByEmailAsync(ApiKey, country, email, null);
        }
        
        /// <remarks/>
        public void GetCustomerByEmailAsync(string ApiKey, CountryCode country, string email, object userState) {
            if ((this.GetCustomerByEmailOperationCompleted == null)) {
                this.GetCustomerByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByEmailOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByEmail", new object[] {
                        ApiKey,
                        country,
                        email}, this.GetCustomerByEmailOperationCompleted, userState);
        }
        
        private void OnGetCustomerByEmailOperationCompleted(object arg) {
            if ((this.GetCustomerByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByEmailCompleted(this, new GetCustomerByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/CreateOrder", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Order CreateOrder(string ApiKey, CountryCode country, Article[] arts, Customer cust, PaymentAlternative payment, FreightType freight, bool sendMail) {
            object[] results = this.Invoke("CreateOrder", new object[] {
                        ApiKey,
                        country,
                        arts,
                        cust,
                        payment,
                        freight,
                        sendMail});
            return ((Order)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrderAsync(string ApiKey, CountryCode country, Article[] arts, Customer cust, PaymentAlternative payment, FreightType freight, bool sendMail) {
            this.CreateOrderAsync(ApiKey, country, arts, cust, payment, freight, sendMail, null);
        }
        
        /// <remarks/>
        public void CreateOrderAsync(string ApiKey, CountryCode country, Article[] arts, Customer cust, PaymentAlternative payment, FreightType freight, bool sendMail, object userState) {
            if ((this.CreateOrderOperationCompleted == null)) {
                this.CreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderOperationCompleted);
            }
            this.InvokeAsync("CreateOrder", new object[] {
                        ApiKey,
                        country,
                        arts,
                        cust,
                        payment,
                        freight,
                        sendMail}, this.CreateOrderOperationCompleted, userState);
        }
        
        private void OnCreateOrderOperationCompleted(object arg) {
            if ((this.CreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderCompleted(this, new CreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListOrders", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Order[] ListOrders(string ApiKey, OrderStatus status, int BatchSize) {
            object[] results = this.Invoke("ListOrders", new object[] {
                        ApiKey,
                        status,
                        BatchSize});
            return ((Order[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOrdersAsync(string ApiKey, OrderStatus status, int BatchSize) {
            this.ListOrdersAsync(ApiKey, status, BatchSize, null);
        }
        
        /// <remarks/>
        public void ListOrdersAsync(string ApiKey, OrderStatus status, int BatchSize, object userState) {
            if ((this.ListOrdersOperationCompleted == null)) {
                this.ListOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOrdersOperationCompleted);
            }
            this.InvokeAsync("ListOrders", new object[] {
                        ApiKey,
                        status,
                        BatchSize}, this.ListOrdersOperationCompleted, userState);
        }
        
        private void OnListOrdersOperationCompleted(object arg) {
            if ((this.ListOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOrdersCompleted(this, new ListOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListNonIntegratedOrders", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Order[] ListNonIntegratedOrders(string ApiKey, int IntegrationID, OrderStatus status, int BatchSize) {
            object[] results = this.Invoke("ListNonIntegratedOrders", new object[] {
                        ApiKey,
                        IntegrationID,
                        status,
                        BatchSize});
            return ((Order[])(results[0]));
        }
        
        /// <remarks/>
        public void ListNonIntegratedOrdersAsync(string ApiKey, int IntegrationID, OrderStatus status, int BatchSize) {
            this.ListNonIntegratedOrdersAsync(ApiKey, IntegrationID, status, BatchSize, null);
        }
        
        /// <remarks/>
        public void ListNonIntegratedOrdersAsync(string ApiKey, int IntegrationID, OrderStatus status, int BatchSize, object userState) {
            if ((this.ListNonIntegratedOrdersOperationCompleted == null)) {
                this.ListNonIntegratedOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListNonIntegratedOrdersOperationCompleted);
            }
            this.InvokeAsync("ListNonIntegratedOrders", new object[] {
                        ApiKey,
                        IntegrationID,
                        status,
                        BatchSize}, this.ListNonIntegratedOrdersOperationCompleted, userState);
        }
        
        private void OnListNonIntegratedOrdersOperationCompleted(object arg) {
            if ((this.ListNonIntegratedOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListNonIntegratedOrdersCompleted(this, new ListNonIntegratedOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/GetOrderIntegration", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderIntegration GetOrderIntegration(string ApiKey, int IntegrationID, int OrderID) {
            object[] results = this.Invoke("GetOrderIntegration", new object[] {
                        ApiKey,
                        IntegrationID,
                        OrderID});
            return ((OrderIntegration)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderIntegrationAsync(string ApiKey, int IntegrationID, int OrderID) {
            this.GetOrderIntegrationAsync(ApiKey, IntegrationID, OrderID, null);
        }
        
        /// <remarks/>
        public void GetOrderIntegrationAsync(string ApiKey, int IntegrationID, int OrderID, object userState) {
            if ((this.GetOrderIntegrationOperationCompleted == null)) {
                this.GetOrderIntegrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderIntegrationOperationCompleted);
            }
            this.InvokeAsync("GetOrderIntegration", new object[] {
                        ApiKey,
                        IntegrationID,
                        OrderID}, this.GetOrderIntegrationOperationCompleted, userState);
        }
        
        private void OnGetOrderIntegrationOperationCompleted(object arg) {
            if ((this.GetOrderIntegrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderIntegrationCompleted(this, new GetOrderIntegrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/AddTrackingNumber", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTrackingNumber(string ApiKey, int OrderNumber, string TrackingNumber) {
            this.Invoke("AddTrackingNumber", new object[] {
                        ApiKey,
                        OrderNumber,
                        TrackingNumber});
        }
        
        /// <remarks/>
        public void AddTrackingNumberAsync(string ApiKey, int OrderNumber, string TrackingNumber) {
            this.AddTrackingNumberAsync(ApiKey, OrderNumber, TrackingNumber, null);
        }
        
        /// <remarks/>
        public void AddTrackingNumberAsync(string ApiKey, int OrderNumber, string TrackingNumber, object userState) {
            if ((this.AddTrackingNumberOperationCompleted == null)) {
                this.AddTrackingNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrackingNumberOperationCompleted);
            }
            this.InvokeAsync("AddTrackingNumber", new object[] {
                        ApiKey,
                        OrderNumber,
                        TrackingNumber}, this.AddTrackingNumberOperationCompleted, userState);
        }
        
        private void OnAddTrackingNumberOperationCompleted(object arg) {
            if ((this.AddTrackingNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrackingNumberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/SetOrderIntegration", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderIntegration(string ApiKey, OrderIntegration IntegrationValues) {
            this.Invoke("SetOrderIntegration", new object[] {
                        ApiKey,
                        IntegrationValues});
        }
        
        /// <remarks/>
        public void SetOrderIntegrationAsync(string ApiKey, OrderIntegration IntegrationValues) {
            this.SetOrderIntegrationAsync(ApiKey, IntegrationValues, null);
        }
        
        /// <remarks/>
        public void SetOrderIntegrationAsync(string ApiKey, OrderIntegration IntegrationValues, object userState) {
            if ((this.SetOrderIntegrationOperationCompleted == null)) {
                this.SetOrderIntegrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderIntegrationOperationCompleted);
            }
            this.InvokeAsync("SetOrderIntegration", new object[] {
                        ApiKey,
                        IntegrationValues}, this.SetOrderIntegrationOperationCompleted, userState);
        }
        
        private void OnSetOrderIntegrationOperationCompleted(object arg) {
            if ((this.SetOrderIntegrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderIntegrationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/UpdateOrderstatus", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrderstatus(string ApiKey, int OrderID, OrderStatus OrderStatusID) {
            this.Invoke("UpdateOrderstatus", new object[] {
                        ApiKey,
                        OrderID,
                        OrderStatusID});
        }
        
        /// <remarks/>
        public void UpdateOrderstatusAsync(string ApiKey, int OrderID, OrderStatus OrderStatusID) {
            this.UpdateOrderstatusAsync(ApiKey, OrderID, OrderStatusID, null);
        }
        
        /// <remarks/>
        public void UpdateOrderstatusAsync(string ApiKey, int OrderID, OrderStatus OrderStatusID, object userState) {
            if ((this.UpdateOrderstatusOperationCompleted == null)) {
                this.UpdateOrderstatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderstatusOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderstatus", new object[] {
                        ApiKey,
                        OrderID,
                        OrderStatusID}, this.UpdateOrderstatusOperationCompleted, userState);
        }
        
        private void OnUpdateOrderstatusOperationCompleted(object arg) {
            if ((this.UpdateOrderstatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderstatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/CreateSubscription", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateSubscription(
                    string ApiKey, 
                    CountryCode country, 
                    Article[] arts, 
                    Customer cust, 
                    int interval, 
                    PaymentAlternative payment, 
                    FreightType freight, 
                    int noticedays, 
                    int bindingperiod, 
                    string reference, 
                    decimal ExpFee, 
                    string CampainCode, 
                    string subscriptionname, 
                    string description, 
                    string ReadMoreURL, 
                    bool SendMail) {
            object[] results = this.Invoke("CreateSubscription", new object[] {
                        ApiKey,
                        country,
                        arts,
                        cust,
                        interval,
                        payment,
                        freight,
                        noticedays,
                        bindingperiod,
                        reference,
                        ExpFee,
                        CampainCode,
                        subscriptionname,
                        description,
                        ReadMoreURL,
                        SendMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(
                    string ApiKey, 
                    CountryCode country, 
                    Article[] arts, 
                    Customer cust, 
                    int interval, 
                    PaymentAlternative payment, 
                    FreightType freight, 
                    int noticedays, 
                    int bindingperiod, 
                    string reference, 
                    decimal ExpFee, 
                    string CampainCode, 
                    string subscriptionname, 
                    string description, 
                    string ReadMoreURL, 
                    bool SendMail) {
            this.CreateSubscriptionAsync(ApiKey, country, arts, cust, interval, payment, freight, noticedays, bindingperiod, reference, ExpFee, CampainCode, subscriptionname, description, ReadMoreURL, SendMail, null);
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(
                    string ApiKey, 
                    CountryCode country, 
                    Article[] arts, 
                    Customer cust, 
                    int interval, 
                    PaymentAlternative payment, 
                    FreightType freight, 
                    int noticedays, 
                    int bindingperiod, 
                    string reference, 
                    decimal ExpFee, 
                    string CampainCode, 
                    string subscriptionname, 
                    string description, 
                    string ReadMoreURL, 
                    bool SendMail, 
                    object userState) {
            if ((this.CreateSubscriptionOperationCompleted == null)) {
                this.CreateSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSubscriptionOperationCompleted);
            }
            this.InvokeAsync("CreateSubscription", new object[] {
                        ApiKey,
                        country,
                        arts,
                        cust,
                        interval,
                        payment,
                        freight,
                        noticedays,
                        bindingperiod,
                        reference,
                        ExpFee,
                        CampainCode,
                        subscriptionname,
                        description,
                        ReadMoreURL,
                        SendMail}, this.CreateSubscriptionOperationCompleted, userState);
        }
        
        private void OnCreateSubscriptionOperationCompleted(object arg) {
            if ((this.CreateSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSubscriptionCompleted(this, new CreateSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/CreateSubscriptionFromProfile", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateSubscriptionFromProfile(string ApiKey, CountryCode country, int subscriptionid, Customer cust, string CampainCode, string reference, bool SendMail) {
            object[] results = this.Invoke("CreateSubscriptionFromProfile", new object[] {
                        ApiKey,
                        country,
                        subscriptionid,
                        cust,
                        CampainCode,
                        reference,
                        SendMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSubscriptionFromProfileAsync(string ApiKey, CountryCode country, int subscriptionid, Customer cust, string CampainCode, string reference, bool SendMail) {
            this.CreateSubscriptionFromProfileAsync(ApiKey, country, subscriptionid, cust, CampainCode, reference, SendMail, null);
        }
        
        /// <remarks/>
        public void CreateSubscriptionFromProfileAsync(string ApiKey, CountryCode country, int subscriptionid, Customer cust, string CampainCode, string reference, bool SendMail, object userState) {
            if ((this.CreateSubscriptionFromProfileOperationCompleted == null)) {
                this.CreateSubscriptionFromProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSubscriptionFromProfileOperationCompleted);
            }
            this.InvokeAsync("CreateSubscriptionFromProfile", new object[] {
                        ApiKey,
                        country,
                        subscriptionid,
                        cust,
                        CampainCode,
                        reference,
                        SendMail}, this.CreateSubscriptionFromProfileOperationCompleted, userState);
        }
        
        private void OnCreateSubscriptionFromProfileOperationCompleted(object arg) {
            if ((this.CreateSubscriptionFromProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSubscriptionFromProfileCompleted(this, new CreateSubscriptionFromProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListSubscriptionInfoByCustomer", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubscriptionShortInfo[] ListSubscriptionInfoByCustomer(string ApiKey, Customer cust) {
            object[] results = this.Invoke("ListSubscriptionInfoByCustomer", new object[] {
                        ApiKey,
                        cust});
            return ((SubscriptionShortInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListSubscriptionInfoByCustomerAsync(string ApiKey, Customer cust) {
            this.ListSubscriptionInfoByCustomerAsync(ApiKey, cust, null);
        }
        
        /// <remarks/>
        public void ListSubscriptionInfoByCustomerAsync(string ApiKey, Customer cust, object userState) {
            if ((this.ListSubscriptionInfoByCustomerOperationCompleted == null)) {
                this.ListSubscriptionInfoByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSubscriptionInfoByCustomerOperationCompleted);
            }
            this.InvokeAsync("ListSubscriptionInfoByCustomer", new object[] {
                        ApiKey,
                        cust}, this.ListSubscriptionInfoByCustomerOperationCompleted, userState);
        }
        
        private void OnListSubscriptionInfoByCustomerOperationCompleted(object arg) {
            if ((this.ListSubscriptionInfoByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSubscriptionInfoByCustomerCompleted(this, new ListSubscriptionInfoByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/UnSubscribe", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnSubscribe(string ApiKey, SubscriptionShortInfo subscription) {
            object[] results = this.Invoke("UnSubscribe", new object[] {
                        ApiKey,
                        subscription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnSubscribeAsync(string ApiKey, SubscriptionShortInfo subscription) {
            this.UnSubscribeAsync(ApiKey, subscription, null);
        }
        
        /// <remarks/>
        public void UnSubscribeAsync(string ApiKey, SubscriptionShortInfo subscription, object userState) {
            if ((this.UnSubscribeOperationCompleted == null)) {
                this.UnSubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnSubscribeOperationCompleted);
            }
            this.InvokeAsync("UnSubscribe", new object[] {
                        ApiKey,
                        subscription}, this.UnSubscribeOperationCompleted, userState);
        }
        
        private void OnUnSubscribeOperationCompleted(object arg) {
            if ((this.UnSubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnSubscribeCompleted(this, new UnSubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListFreighTypes", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FreightType[] ListFreighTypes(string ApiKey, CountryCode country) {
            object[] results = this.Invoke("ListFreighTypes", new object[] {
                        ApiKey,
                        country});
            return ((FreightType[])(results[0]));
        }
        
        /// <remarks/>
        public void ListFreighTypesAsync(string ApiKey, CountryCode country) {
            this.ListFreighTypesAsync(ApiKey, country, null);
        }
        
        /// <remarks/>
        public void ListFreighTypesAsync(string ApiKey, CountryCode country, object userState) {
            if ((this.ListFreighTypesOperationCompleted == null)) {
                this.ListFreighTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListFreighTypesOperationCompleted);
            }
            this.InvokeAsync("ListFreighTypes", new object[] {
                        ApiKey,
                        country}, this.ListFreighTypesOperationCompleted, userState);
        }
        
        private void OnListFreighTypesOperationCompleted(object arg) {
            if ((this.ListFreighTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListFreighTypesCompleted(this, new ListFreighTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListPaymentTypes", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentAlternative[] ListPaymentTypes(string ApiKey, CountryCode country) {
            object[] results = this.Invoke("ListPaymentTypes", new object[] {
                        ApiKey,
                        country});
            return ((PaymentAlternative[])(results[0]));
        }
        
        /// <remarks/>
        public void ListPaymentTypesAsync(string ApiKey, CountryCode country) {
            this.ListPaymentTypesAsync(ApiKey, country, null);
        }
        
        /// <remarks/>
        public void ListPaymentTypesAsync(string ApiKey, CountryCode country, object userState) {
            if ((this.ListPaymentTypesOperationCompleted == null)) {
                this.ListPaymentTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListPaymentTypesOperationCompleted);
            }
            this.InvokeAsync("ListPaymentTypes", new object[] {
                        ApiKey,
                        country}, this.ListPaymentTypesOperationCompleted, userState);
        }
        
        private void OnListPaymentTypesOperationCompleted(object arg) {
            if ((this.ListPaymentTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListPaymentTypesCompleted(this, new ListPaymentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/CreateUpdateArticle", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Article CreateUpdateArticle(string ApiKey, Article art) {
            object[] results = this.Invoke("CreateUpdateArticle", new object[] {
                        ApiKey,
                        art});
            return ((Article)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUpdateArticleAsync(string ApiKey, Article art) {
            this.CreateUpdateArticleAsync(ApiKey, art, null);
        }
        
        /// <remarks/>
        public void CreateUpdateArticleAsync(string ApiKey, Article art, object userState) {
            if ((this.CreateUpdateArticleOperationCompleted == null)) {
                this.CreateUpdateArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUpdateArticleOperationCompleted);
            }
            this.InvokeAsync("CreateUpdateArticle", new object[] {
                        ApiKey,
                        art}, this.CreateUpdateArticleOperationCompleted, userState);
        }
        
        private void OnCreateUpdateArticleOperationCompleted(object arg) {
            if ((this.CreateUpdateArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUpdateArticleCompleted(this, new CreateUpdateArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/CreateUpdateProduct", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product CreateUpdateProduct(string ApiKey, Product product) {
            object[] results = this.Invoke("CreateUpdateProduct", new object[] {
                        ApiKey,
                        product});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUpdateProductAsync(string ApiKey, Product product) {
            this.CreateUpdateProductAsync(ApiKey, product, null);
        }
        
        /// <remarks/>
        public void CreateUpdateProductAsync(string ApiKey, Product product, object userState) {
            if ((this.CreateUpdateProductOperationCompleted == null)) {
                this.CreateUpdateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUpdateProductOperationCompleted);
            }
            this.InvokeAsync("CreateUpdateProduct", new object[] {
                        ApiKey,
                        product}, this.CreateUpdateProductOperationCompleted, userState);
        }
        
        private void OnCreateUpdateProductOperationCompleted(object arg) {
            if ((this.CreateUpdateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUpdateProductCompleted(this, new CreateUpdateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListProducts", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ListProducts(string ApiKey, CountryCode country) {
            object[] results = this.Invoke("ListProducts", new object[] {
                        ApiKey,
                        country});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ListProductsAsync(string ApiKey, CountryCode country) {
            this.ListProductsAsync(ApiKey, country, null);
        }
        
        /// <remarks/>
        public void ListProductsAsync(string ApiKey, CountryCode country, object userState) {
            if ((this.ListProductsOperationCompleted == null)) {
                this.ListProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListProductsOperationCompleted);
            }
            this.InvokeAsync("ListProducts", new object[] {
                        ApiKey,
                        country}, this.ListProductsOperationCompleted, userState);
        }
        
        private void OnListProductsOperationCompleted(object arg) {
            if ((this.ListProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListProductsCompleted(this, new ListProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListArticles", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Article[] ListArticles(string ApiKey) {
            object[] results = this.Invoke("ListArticles", new object[] {
                        ApiKey});
            return ((Article[])(results[0]));
        }
        
        /// <remarks/>
        public void ListArticlesAsync(string ApiKey) {
            this.ListArticlesAsync(ApiKey, null);
        }
        
        /// <remarks/>
        public void ListArticlesAsync(string ApiKey, object userState) {
            if ((this.ListArticlesOperationCompleted == null)) {
                this.ListArticlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListArticlesOperationCompleted);
            }
            this.InvokeAsync("ListArticles", new object[] {
                        ApiKey}, this.ListArticlesOperationCompleted, userState);
        }
        
        private void OnListArticlesOperationCompleted(object arg) {
            if ((this.ListArticlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListArticlesCompleted(this, new ListArticlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/ListArticlesFromProduct", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Article[] ListArticlesFromProduct(string ApiKey, CountryCode country, string productnumber) {
            object[] results = this.Invoke("ListArticlesFromProduct", new object[] {
                        ApiKey,
                        country,
                        productnumber});
            return ((Article[])(results[0]));
        }
        
        /// <remarks/>
        public void ListArticlesFromProductAsync(string ApiKey, CountryCode country, string productnumber) {
            this.ListArticlesFromProductAsync(ApiKey, country, productnumber, null);
        }
        
        /// <remarks/>
        public void ListArticlesFromProductAsync(string ApiKey, CountryCode country, string productnumber, object userState) {
            if ((this.ListArticlesFromProductOperationCompleted == null)) {
                this.ListArticlesFromProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListArticlesFromProductOperationCompleted);
            }
            this.InvokeAsync("ListArticlesFromProduct", new object[] {
                        ApiKey,
                        country,
                        productnumber}, this.ListArticlesFromProductOperationCompleted, userState);
        }
        
        private void OnListArticlesFromProductOperationCompleted(object arg) {
            if ((this.ListArticlesFromProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListArticlesFromProductCompleted(this, new ListArticlesFromProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/GetProduct", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product GetProduct(string ApiKey, CountryCode country, string productnumber) {
            object[] results = this.Invoke("GetProduct", new object[] {
                        ApiKey,
                        country,
                        productnumber});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductAsync(string ApiKey, CountryCode country, string productnumber) {
            this.GetProductAsync(ApiKey, country, productnumber, null);
        }
        
        /// <remarks/>
        public void GetProductAsync(string ApiKey, CountryCode country, string productnumber, object userState) {
            if ((this.GetProductOperationCompleted == null)) {
                this.GetProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductOperationCompleted);
            }
            this.InvokeAsync("GetProduct", new object[] {
                        ApiKey,
                        country,
                        productnumber}, this.GetProductOperationCompleted, userState);
        }
        
        private void OnGetProductOperationCompleted(object arg) {
            if ((this.GetProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductCompleted(this, new GetProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/PlaceProductInTree", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PlaceProductInTree(string ApiKey, string TreeNode, string productnumber) {
            this.Invoke("PlaceProductInTree", new object[] {
                        ApiKey,
                        TreeNode,
                        productnumber});
        }
        
        /// <remarks/>
        public void PlaceProductInTreeAsync(string ApiKey, string TreeNode, string productnumber) {
            this.PlaceProductInTreeAsync(ApiKey, TreeNode, productnumber, null);
        }
        
        /// <remarks/>
        public void PlaceProductInTreeAsync(string ApiKey, string TreeNode, string productnumber, object userState) {
            if ((this.PlaceProductInTreeOperationCompleted == null)) {
                this.PlaceProductInTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceProductInTreeOperationCompleted);
            }
            this.InvokeAsync("PlaceProductInTree", new object[] {
                        ApiKey,
                        TreeNode,
                        productnumber}, this.PlaceProductInTreeOperationCompleted, userState);
        }
        
        private void OnPlaceProductInTreeOperationCompleted(object arg) {
            if ((this.PlaceProductInTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceProductInTreeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/GetArticle", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Article GetArticle(string ApiKey, CountryCode country, string articlenr) {
            object[] results = this.Invoke("GetArticle", new object[] {
                        ApiKey,
                        country,
                        articlenr});
            return ((Article)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleAsync(string ApiKey, CountryCode country, string articlenr) {
            this.GetArticleAsync(ApiKey, country, articlenr, null);
        }
        
        /// <remarks/>
        public void GetArticleAsync(string ApiKey, CountryCode country, string articlenr, object userState) {
            if ((this.GetArticleOperationCompleted == null)) {
                this.GetArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleOperationCompleted);
            }
            this.InvokeAsync("GetArticle", new object[] {
                        ApiKey,
                        country,
                        articlenr}, this.GetArticleOperationCompleted, userState);
        }
        
        private void OnGetArticleOperationCompleted(object arg) {
            if ((this.GetArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleCompleted(this, new GetArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/SetInventory", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetInventory(string ApiKey, string ArticleNo, int Quantity) {
            this.Invoke("SetInventory", new object[] {
                        ApiKey,
                        ArticleNo,
                        Quantity});
        }
        
        /// <remarks/>
        public void SetInventoryAsync(string ApiKey, string ArticleNo, int Quantity) {
            this.SetInventoryAsync(ApiKey, ArticleNo, Quantity, null);
        }
        
        /// <remarks/>
        public void SetInventoryAsync(string ApiKey, string ArticleNo, int Quantity, object userState) {
            if ((this.SetInventoryOperationCompleted == null)) {
                this.SetInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetInventoryOperationCompleted);
            }
            this.InvokeAsync("SetInventory", new object[] {
                        ApiKey,
                        ArticleNo,
                        Quantity}, this.SetInventoryOperationCompleted, userState);
        }
        
        private void OnSetInventoryOperationCompleted(object arg) {
            if ((this.SetInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetInventoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/UpdatePrice", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePrice(string ApiKey, CountryCode country, string ArticleNo, decimal price) {
            this.Invoke("UpdatePrice", new object[] {
                        ApiKey,
                        country,
                        ArticleNo,
                        price});
        }
        
        /// <remarks/>
        public void UpdatePriceAsync(string ApiKey, CountryCode country, string ArticleNo, decimal price) {
            this.UpdatePriceAsync(ApiKey, country, ArticleNo, price, null);
        }
        
        /// <remarks/>
        public void UpdatePriceAsync(string ApiKey, CountryCode country, string ArticleNo, decimal price, object userState) {
            if ((this.UpdatePriceOperationCompleted == null)) {
                this.UpdatePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePriceOperationCompleted);
            }
            this.InvokeAsync("UpdatePrice", new object[] {
                        ApiKey,
                        country,
                        ArticleNo,
                        price}, this.UpdatePriceOperationCompleted, userState);
        }
        
        private void OnUpdatePriceOperationCompleted(object arg) {
            if ((this.UpdatePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/UpdateRetailPrice", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRetailPrice(string ApiKey, CountryCode country, string ArticleNo, decimal price) {
            this.Invoke("UpdateRetailPrice", new object[] {
                        ApiKey,
                        country,
                        ArticleNo,
                        price});
        }
        
        /// <remarks/>
        public void UpdateRetailPriceAsync(string ApiKey, CountryCode country, string ArticleNo, decimal price) {
            this.UpdateRetailPriceAsync(ApiKey, country, ArticleNo, price, null);
        }
        
        /// <remarks/>
        public void UpdateRetailPriceAsync(string ApiKey, CountryCode country, string ArticleNo, decimal price, object userState) {
            if ((this.UpdateRetailPriceOperationCompleted == null)) {
                this.UpdateRetailPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRetailPriceOperationCompleted);
            }
            this.InvokeAsync("UpdateRetailPrice", new object[] {
                        ApiKey,
                        country,
                        ArticleNo,
                        price}, this.UpdateRetailPriceOperationCompleted, userState);
        }
        
        private void OnUpdateRetailPriceOperationCompleted(object arg) {
            if ((this.UpdateRetailPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRetailPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/UpdateGroupPrice", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateGroupPrice(string ApiKey, CountryCode country, string ArticleNo, int customergroup, decimal price) {
            this.Invoke("UpdateGroupPrice", new object[] {
                        ApiKey,
                        country,
                        ArticleNo,
                        customergroup,
                        price});
        }
        
        /// <remarks/>
        public void UpdateGroupPriceAsync(string ApiKey, CountryCode country, string ArticleNo, int customergroup, decimal price) {
            this.UpdateGroupPriceAsync(ApiKey, country, ArticleNo, customergroup, price, null);
        }
        
        /// <remarks/>
        public void UpdateGroupPriceAsync(string ApiKey, CountryCode country, string ArticleNo, int customergroup, decimal price, object userState) {
            if ((this.UpdateGroupPriceOperationCompleted == null)) {
                this.UpdateGroupPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupPriceOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupPrice", new object[] {
                        ApiKey,
                        country,
                        ArticleNo,
                        customergroup,
                        price}, this.UpdateGroupPriceOperationCompleted, userState);
        }
        
        private void OnUpdateGroupPriceOperationCompleted(object arg) {
            if ((this.UpdateGroupPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fortusinternational.com/SetArticleProperty", RequestNamespace="http://fortusinternational.com/", ResponseNamespace="http://fortusinternational.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetArticleProperty(string ApiKey, string ArticleNo, string PropertyMeta, string PropertyValue) {
            this.Invoke("SetArticleProperty", new object[] {
                        ApiKey,
                        ArticleNo,
                        PropertyMeta,
                        PropertyValue});
        }
        
        /// <remarks/>
        public void SetArticlePropertyAsync(string ApiKey, string ArticleNo, string PropertyMeta, string PropertyValue) {
            this.SetArticlePropertyAsync(ApiKey, ArticleNo, PropertyMeta, PropertyValue, null);
        }
        
        /// <remarks/>
        public void SetArticlePropertyAsync(string ApiKey, string ArticleNo, string PropertyMeta, string PropertyValue, object userState) {
            if ((this.SetArticlePropertyOperationCompleted == null)) {
                this.SetArticlePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetArticlePropertyOperationCompleted);
            }
            this.InvokeAsync("SetArticleProperty", new object[] {
                        ApiKey,
                        ArticleNo,
                        PropertyMeta,
                        PropertyValue}, this.SetArticlePropertyOperationCompleted, userState);
        }
        
        private void OnSetArticlePropertyOperationCompleted(object arg) {
            if ((this.SetArticlePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetArticlePropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public enum CountryCode {
        
        /// <remarks/>
        Sweden,
        
        /// <remarks/>
        Denmark,
        
        /// <remarks/>
        Norway,
        
        /// <remarks/>
        Finland,
        
        /// <remarks/>
        Suomi,
        
        /// <remarks/>
        Deutschland,
        
        /// <remarks/>
        Österreich,
        
        /// <remarks/>
        UnitedKingdom,
        
        /// <remarks/>
        Schweiz,
        
        /// <remarks/>
        Nederland,
        
        /// <remarks/>
        Ireland,
        
        /// <remarks/>
        France,
        
        /// <remarks/>
        Italy,
        
        /// <remarks/>
        Spain,
        
        /// <remarks/>
        Poland,
        
        /// <remarks/>
        Europe,
        
        /// <remarks/>
        Estonia,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class Customer {
        
        private CountryCode countryField;
        
        private System.DateTime registrationDateField;
        
        private string deliveryCityField;
        
        private string invoiceCityField;
        
        private string companyNameField;
        
        private CustomerType customerTypeField;
        
        private bool cardCustomerField;
        
        private bool isInActiveField;
        
        private Gender sexField;
        
        private int customerIDField;
        
        private string emailField;
        
        private string deliveryFirstnameField;
        
        private string deliveryLastnameField;
        
        private string invoiceFirstnameField;
        
        private string invoiceLastnameField;
        
        private string mobileField;
        
        private string personalnumberField;
        
        private string phoneField;
        
        private bool recievePostOutsField;
        
        private bool usesDeliveryAddressField;
        
        private string deliveryStreetAddressField;
        
        private string invoiceStreetAddressField;
        
        private string invoiceZipCodeField;
        
        private string deliveryZipCodeField;
        
        private string otherField;
        
        private bool blockedField;
        
        private string ipField;
        
        private bool approvedField;
        
        /// <remarks/>
        public CountryCode Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RegistrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                this.registrationDateField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryCity {
            get {
                return this.deliveryCityField;
            }
            set {
                this.deliveryCityField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceCity {
            get {
                return this.invoiceCityField;
            }
            set {
                this.invoiceCityField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public CustomerType CustomerType {
            get {
                return this.customerTypeField;
            }
            set {
                this.customerTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool CardCustomer {
            get {
                return this.cardCustomerField;
            }
            set {
                this.cardCustomerField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInActive {
            get {
                return this.isInActiveField;
            }
            set {
                this.isInActiveField = value;
            }
        }
        
        /// <remarks/>
        public Gender Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public int CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryFirstname {
            get {
                return this.deliveryFirstnameField;
            }
            set {
                this.deliveryFirstnameField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryLastname {
            get {
                return this.deliveryLastnameField;
            }
            set {
                this.deliveryLastnameField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceFirstname {
            get {
                return this.invoiceFirstnameField;
            }
            set {
                this.invoiceFirstnameField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceLastname {
            get {
                return this.invoiceLastnameField;
            }
            set {
                this.invoiceLastnameField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Personalnumber {
            get {
                return this.personalnumberField;
            }
            set {
                this.personalnumberField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public bool RecievePostOuts {
            get {
                return this.recievePostOutsField;
            }
            set {
                this.recievePostOutsField = value;
            }
        }
        
        /// <remarks/>
        public bool UsesDeliveryAddress {
            get {
                return this.usesDeliveryAddressField;
            }
            set {
                this.usesDeliveryAddressField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStreetAddress {
            get {
                return this.deliveryStreetAddressField;
            }
            set {
                this.deliveryStreetAddressField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceStreetAddress {
            get {
                return this.invoiceStreetAddressField;
            }
            set {
                this.invoiceStreetAddressField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceZipCode {
            get {
                return this.invoiceZipCodeField;
            }
            set {
                this.invoiceZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryZipCode {
            get {
                return this.deliveryZipCodeField;
            }
            set {
                this.deliveryZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Other {
            get {
                return this.otherField;
            }
            set {
                this.otherField = value;
            }
        }
        
        /// <remarks/>
        public bool Blocked {
            get {
                return this.blockedField;
            }
            set {
                this.blockedField = value;
            }
        }
        
        /// <remarks/>
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public enum CustomerType {
        
        /// <remarks/>
        PrivateCustomer,
        
        /// <remarks/>
        BusinessCustomer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public enum Gender {
        
        /// <remarks/>
        Male,
        
        /// <remarks/>
        Female,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class Manufacturer {
        
        private int manufactureIdField;
        
        private string manufactureNameField;
        
        /// <remarks/>
        public int ManufactureId {
            get {
                return this.manufactureIdField;
            }
            set {
                this.manufactureIdField = value;
            }
        }
        
        /// <remarks/>
        public string ManufactureName {
            get {
                return this.manufactureNameField;
            }
            set {
                this.manufactureNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class Product {
        
        private string productNumberField;
        
        private CountryCode countryField;
        
        private string localNameField;
        
        private string productNameField;
        
        private System.DateTime createdDateField;
        
        private string shortInfoProductlistField;
        
        private string miscField;
        
        private string productDescriptionField;
        
        private string moreProductInformationField;
        
        private string uRLField;
        
        private string keywordField;
        
        private string shortInfoProductdetailField;
        
        private string headernameProductDescriptionField;
        
        private string headernameMoreInfomationField;
        
        private Manufacturer productManufacturerField;
        
        /// <remarks/>
        public string ProductNumber {
            get {
                return this.productNumberField;
            }
            set {
                this.productNumberField = value;
            }
        }
        
        /// <remarks/>
        public CountryCode Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string LocalName {
            get {
                return this.localNameField;
            }
            set {
                this.localNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public string ShortInfoProductlist {
            get {
                return this.shortInfoProductlistField;
            }
            set {
                this.shortInfoProductlistField = value;
            }
        }
        
        /// <remarks/>
        public string Misc {
            get {
                return this.miscField;
            }
            set {
                this.miscField = value;
            }
        }
        
        /// <remarks/>
        public string ProductDescription {
            get {
                return this.productDescriptionField;
            }
            set {
                this.productDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string MoreProductInformation {
            get {
                return this.moreProductInformationField;
            }
            set {
                this.moreProductInformationField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public string Keyword {
            get {
                return this.keywordField;
            }
            set {
                this.keywordField = value;
            }
        }
        
        /// <remarks/>
        public string ShortInfoProductdetail {
            get {
                return this.shortInfoProductdetailField;
            }
            set {
                this.shortInfoProductdetailField = value;
            }
        }
        
        /// <remarks/>
        public string HeadernameProductDescription {
            get {
                return this.headernameProductDescriptionField;
            }
            set {
                this.headernameProductDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string HeadernameMoreInfomation {
            get {
                return this.headernameMoreInfomationField;
            }
            set {
                this.headernameMoreInfomationField = value;
            }
        }
        
        /// <remarks/>
        public Manufacturer ProductManufacturer {
            get {
                return this.productManufacturerField;
            }
            set {
                this.productManufacturerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class SubscriptionShortInfo {
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private int subscriptionIDField;
        
        private string metaField;
        
        private SubscriptionStatusEnum statusField;
        
        private string subscriptionReferenceField;
        
        private System.DateTime startdateField;
        
        private int bindingPeriodField;
        
        private int noticeDaysField;
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public int SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Meta {
            get {
                return this.metaField;
            }
            set {
                this.metaField = value;
            }
        }
        
        /// <remarks/>
        public SubscriptionStatusEnum Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriptionReference {
            get {
                return this.subscriptionReferenceField;
            }
            set {
                this.subscriptionReferenceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Startdate {
            get {
                return this.startdateField;
            }
            set {
                this.startdateField = value;
            }
        }
        
        /// <remarks/>
        public int BindingPeriod {
            get {
                return this.bindingPeriodField;
            }
            set {
                this.bindingPeriodField = value;
            }
        }
        
        /// <remarks/>
        public int NoticeDays {
            get {
                return this.noticeDaysField;
            }
            set {
                this.noticeDaysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public enum SubscriptionStatusEnum {
        
        /// <remarks/>
        Preparing,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        InActive,
        
        /// <remarks/>
        UnderTermination,
        
        /// <remarks/>
        TerminatedByCustomer,
        
        /// <remarks/>
        Blocked,
        
        /// <remarks/>
        Finished,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class OrderIntegration {
        
        private int integrationIdField;
        
        private int orderIdField;
        
        private bool transField;
        
        private string field1Field;
        
        private string field2Field;
        
        private string field3Field;
        
        private string field4Field;
        
        private string field5Field;
        
        private string field6Field;
        
        /// <remarks/>
        public int IntegrationId {
            get {
                return this.integrationIdField;
            }
            set {
                this.integrationIdField = value;
            }
        }
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Trans {
            get {
                return this.transField;
            }
            set {
                this.transField = value;
            }
        }
        
        /// <remarks/>
        public string Field1 {
            get {
                return this.field1Field;
            }
            set {
                this.field1Field = value;
            }
        }
        
        /// <remarks/>
        public string Field2 {
            get {
                return this.field2Field;
            }
            set {
                this.field2Field = value;
            }
        }
        
        /// <remarks/>
        public string Field3 {
            get {
                return this.field3Field;
            }
            set {
                this.field3Field = value;
            }
        }
        
        /// <remarks/>
        public string Field4 {
            get {
                return this.field4Field;
            }
            set {
                this.field4Field = value;
            }
        }
        
        /// <remarks/>
        public string Field5 {
            get {
                return this.field5Field;
            }
            set {
                this.field5Field = value;
            }
        }
        
        /// <remarks/>
        public string Field6 {
            get {
                return this.field6Field;
            }
            set {
                this.field6Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class OrderRow {
        
        private string articleNoField;
        
        private string descriptionField;
        
        private decimal priceField;
        
        private int quantityField;
        
        private decimal vATField;
        
        /// <remarks/>
        public string ArticleNo {
            get {
                return this.articleNoField;
            }
            set {
                this.articleNoField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal VAT {
            get {
                return this.vATField;
            }
            set {
                this.vATField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class Order {
        
        private bool subscriptionOrderField;
        
        private bool deliveryNoticeSentField;
        
        private string firstnameField;
        
        private string lastnameField;
        
        private decimal expFeeField;
        
        private int orderNumberField;
        
        private OrderType orderTypeField;
        
        private OrderStatus orderStatusField;
        
        private Customer customerField;
        
        private int paymentTypeField;
        
        private System.DateTime createdField;
        
        private System.DateTime deliveryDateField;
        
        private System.DateTime desiredDeliveryDateField;
        
        private bool useDeliveryAddressField;
        
        private string paymentTypeNameField;
        
        private string orderStatusNameField;
        
        private string deliveryNameField;
        
        private string deliveryAddressField;
        
        private string deliveryAddress2Field;
        
        private string deliveryPostalNumberField;
        
        private string deliveryCityField;
        
        private string invoiceNameField;
        
        private string invoiceAddressField;
        
        private string invoiceAddress2Field;
        
        private string invoiceCityField;
        
        private string invoicePostalNumberField;
        
        private string companyField;
        
        private string ipField;
        
        private CountryCode countryField;
        
        private decimal orderValueField;
        
        private decimal productValueField;
        
        private decimal serviceFeeField;
        
        private decimal vATField;
        
        private decimal paymentFeeField;
        
        private string currencyField;
        
        private string phoneField;
        
        private string administratorOrderNoteField;
        
        private string administratorPublicOrderNoteField;
        
        private string customerOrderNoteField;
        
        private OrderRow[] orderRowsField;
        
        private int freightTypeField;
        
        private string freightTypeNameField;
        
        private decimal freightFeeField;
        
        /// <remarks/>
        public bool SubscriptionOrder {
            get {
                return this.subscriptionOrderField;
            }
            set {
                this.subscriptionOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool DeliveryNoticeSent {
            get {
                return this.deliveryNoticeSentField;
            }
            set {
                this.deliveryNoticeSentField = value;
            }
        }
        
        /// <remarks/>
        public string Firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string Lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public decimal ExpFee {
            get {
                return this.expFeeField;
            }
            set {
                this.expFeeField = value;
            }
        }
        
        /// <remarks/>
        public int OrderNumber {
            get {
                return this.orderNumberField;
            }
            set {
                this.orderNumberField = value;
            }
        }
        
        /// <remarks/>
        public OrderType OrderType {
            get {
                return this.orderTypeField;
            }
            set {
                this.orderTypeField = value;
            }
        }
        
        /// <remarks/>
        public OrderStatus OrderStatus {
            get {
                return this.orderStatusField;
            }
            set {
                this.orderStatusField = value;
            }
        }
        
        /// <remarks/>
        public Customer Customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DeliveryDate {
            get {
                return this.deliveryDateField;
            }
            set {
                this.deliveryDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DesiredDeliveryDate {
            get {
                return this.desiredDeliveryDateField;
            }
            set {
                this.desiredDeliveryDateField = value;
            }
        }
        
        /// <remarks/>
        public bool UseDeliveryAddress {
            get {
                return this.useDeliveryAddressField;
            }
            set {
                this.useDeliveryAddressField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentTypeName {
            get {
                return this.paymentTypeNameField;
            }
            set {
                this.paymentTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatusName {
            get {
                return this.orderStatusNameField;
            }
            set {
                this.orderStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryName {
            get {
                return this.deliveryNameField;
            }
            set {
                this.deliveryNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryAddress {
            get {
                return this.deliveryAddressField;
            }
            set {
                this.deliveryAddressField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryAddress2 {
            get {
                return this.deliveryAddress2Field;
            }
            set {
                this.deliveryAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryPostalNumber {
            get {
                return this.deliveryPostalNumberField;
            }
            set {
                this.deliveryPostalNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryCity {
            get {
                return this.deliveryCityField;
            }
            set {
                this.deliveryCityField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceName {
            get {
                return this.invoiceNameField;
            }
            set {
                this.invoiceNameField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceAddress {
            get {
                return this.invoiceAddressField;
            }
            set {
                this.invoiceAddressField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceAddress2 {
            get {
                return this.invoiceAddress2Field;
            }
            set {
                this.invoiceAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceCity {
            get {
                return this.invoiceCityField;
            }
            set {
                this.invoiceCityField = value;
            }
        }
        
        /// <remarks/>
        public string InvoicePostalNumber {
            get {
                return this.invoicePostalNumberField;
            }
            set {
                this.invoicePostalNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        public CountryCode Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderValue {
            get {
                return this.orderValueField;
            }
            set {
                this.orderValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal ProductValue {
            get {
                return this.productValueField;
            }
            set {
                this.productValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal ServiceFee {
            get {
                return this.serviceFeeField;
            }
            set {
                this.serviceFeeField = value;
            }
        }
        
        /// <remarks/>
        public decimal VAT {
            get {
                return this.vATField;
            }
            set {
                this.vATField = value;
            }
        }
        
        /// <remarks/>
        public decimal PaymentFee {
            get {
                return this.paymentFeeField;
            }
            set {
                this.paymentFeeField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string AdministratorOrderNote {
            get {
                return this.administratorOrderNoteField;
            }
            set {
                this.administratorOrderNoteField = value;
            }
        }
        
        /// <remarks/>
        public string AdministratorPublicOrderNote {
            get {
                return this.administratorPublicOrderNoteField;
            }
            set {
                this.administratorPublicOrderNoteField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerOrderNote {
            get {
                return this.customerOrderNoteField;
            }
            set {
                this.customerOrderNoteField = value;
            }
        }
        
        /// <remarks/>
        public OrderRow[] OrderRows {
            get {
                return this.orderRowsField;
            }
            set {
                this.orderRowsField = value;
            }
        }
        
        /// <remarks/>
        public int FreightType {
            get {
                return this.freightTypeField;
            }
            set {
                this.freightTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FreightTypeName {
            get {
                return this.freightTypeNameField;
            }
            set {
                this.freightTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal FreightFee {
            get {
                return this.freightFeeField;
            }
            set {
                this.freightFeeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public enum OrderType {
        
        /// <remarks/>
        NormalOrder,
        
        /// <remarks/>
        SplittedOrder,
        
        /// <remarks/>
        DividedOrder,
        
        /// <remarks/>
        MotherOrder,
        
        /// <remarks/>
        ConsignmentOrder,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public enum OrderStatus {
        
        /// <remarks/>
        Abort,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        AvbrutenOrder,
        
        /// <remarks/>
        Blocked,
        
        /// <remarks/>
        Delivered,
        
        /// <remarks/>
        NotPossible,
        
        /// <remarks/>
        OrderError,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        MD5Keychanged,
        
        /// <remarks/>
        OrderCancelled,
        
        /// <remarks/>
        Ordered,
        
        /// <remarks/>
        Registered,
        
        /// <remarks/>
        Reserved,
        
        /// <remarks/>
        Shipping,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class PaymentAlternative {
        
        private int paymentAlternativeIDField;
        
        private string paymentTypeNameField;
        
        private decimal costField;
        
        /// <remarks/>
        public int PaymentAlternativeID {
            get {
                return this.paymentAlternativeIDField;
            }
            set {
                this.paymentAlternativeIDField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentTypeName {
            get {
                return this.paymentTypeNameField;
            }
            set {
                this.paymentTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class FreightType {
        
        private int freightTypeIDField;
        
        private string freightTypeNameField;
        
        private decimal freightCostField;
        
        /// <remarks/>
        public int FreightTypeID {
            get {
                return this.freightTypeIDField;
            }
            set {
                this.freightTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string FreightTypeName {
            get {
                return this.freightTypeNameField;
            }
            set {
                this.freightTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal FreightCost {
            get {
                return this.freightCostField;
            }
            set {
                this.freightCostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class Storageprofile {
        
        private int storageprofileIDField;
        
        private string metaField;
        
        /// <remarks/>
        public int StorageprofileID {
            get {
                return this.storageprofileIDField;
            }
            set {
                this.storageprofileIDField = value;
            }
        }
        
        /// <remarks/>
        public string Meta {
            get {
                return this.metaField;
            }
            set {
                this.metaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public partial class Article {
        
        private Storageprofile activeStorageProfileField;
        
        private string articleNoField;
        
        private string articleStatusField;
        
        private System.DateTime createdField;
        
        private FreightType activeFreightTypeField;
        
        private string localNameField;
        
        private string nameField;
        
        private double purchasePriceField;
        
        private double regularPriceField;
        
        private decimal priceField;
        
        private string productNumberField;
        
        private int weightField;
        
        private VATCode vATtypeField;
        
        private decimal vATField;
        
        /// <remarks/>
        public Storageprofile ActiveStorageProfile {
            get {
                return this.activeStorageProfileField;
            }
            set {
                this.activeStorageProfileField = value;
            }
        }
        
        /// <remarks/>
        public string ArticleNo {
            get {
                return this.articleNoField;
            }
            set {
                this.articleNoField = value;
            }
        }
        
        /// <remarks/>
        public string ArticleStatus {
            get {
                return this.articleStatusField;
            }
            set {
                this.articleStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public FreightType ActiveFreightType {
            get {
                return this.activeFreightTypeField;
            }
            set {
                this.activeFreightTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LocalName {
            get {
                return this.localNameField;
            }
            set {
                this.localNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double PurchasePrice {
            get {
                return this.purchasePriceField;
            }
            set {
                this.purchasePriceField = value;
            }
        }
        
        /// <remarks/>
        public double RegularPrice {
            get {
                return this.regularPriceField;
            }
            set {
                this.regularPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string ProductNumber {
            get {
                return this.productNumberField;
            }
            set {
                this.productNumberField = value;
            }
        }
        
        /// <remarks/>
        public int Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public VATCode VATtype {
            get {
                return this.vATtypeField;
            }
            set {
                this.vATtypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal VAT {
            get {
                return this.vATField;
            }
            set {
                this.vATField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fortusinternational.com/")]
    public enum VATCode {
        
        /// <remarks/>
        NO_VAT,
        
        /// <remarks/>
        TWENTYFIVE_PERCENT,
        
        /// <remarks/>
        TWELVE_PERCENT,
        
        /// <remarks/>
        SIX_POINT_TWO_PERCENT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestConnectionCompletedEventHandler(object sender, TestConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateUpdateCustomerCompletedEventHandler(object sender, CreateUpdateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListCustomersCompletedEventHandler(object sender, ListCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LogInCustomerCompletedEventHandler(object sender, LogInCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogInCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogInCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCustomerCompletedEventHandler(object sender, GetCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCustomerByPersonalNumberCompletedEventHandler(object sender, GetCustomerByPersonalNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByPersonalNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByPersonalNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCustomerByEmailCompletedEventHandler(object sender, GetCustomerByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrderCompletedEventHandler(object sender, CreateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListOrdersCompletedEventHandler(object sender, ListOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListNonIntegratedOrdersCompletedEventHandler(object sender, ListNonIntegratedOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListNonIntegratedOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListNonIntegratedOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetOrderIntegrationCompletedEventHandler(object sender, GetOrderIntegrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderIntegrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderIntegrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderIntegration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderIntegration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddTrackingNumberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SetOrderIntegrationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateOrderstatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateSubscriptionCompletedEventHandler(object sender, CreateSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateSubscriptionFromProfileCompletedEventHandler(object sender, CreateSubscriptionFromProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSubscriptionFromProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSubscriptionFromProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListSubscriptionInfoByCustomerCompletedEventHandler(object sender, ListSubscriptionInfoByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSubscriptionInfoByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSubscriptionInfoByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscriptionShortInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscriptionShortInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnSubscribeCompletedEventHandler(object sender, UnSubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnSubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnSubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListFreighTypesCompletedEventHandler(object sender, ListFreighTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListFreighTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListFreighTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FreightType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FreightType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListPaymentTypesCompletedEventHandler(object sender, ListPaymentTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListPaymentTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListPaymentTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentAlternative[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentAlternative[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateUpdateArticleCompletedEventHandler(object sender, CreateUpdateArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUpdateArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUpdateArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Article Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Article)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateUpdateProductCompletedEventHandler(object sender, CreateUpdateProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUpdateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUpdateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListProductsCompletedEventHandler(object sender, ListProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListArticlesCompletedEventHandler(object sender, ListArticlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListArticlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListArticlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Article[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Article[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ListArticlesFromProductCompletedEventHandler(object sender, ListArticlesFromProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListArticlesFromProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListArticlesFromProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Article[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Article[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetProductCompletedEventHandler(object sender, GetProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PlaceProductInTreeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetArticleCompletedEventHandler(object sender, GetArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Article Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Article)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SetInventoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdatePriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateRetailPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateGroupPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SetArticlePropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591